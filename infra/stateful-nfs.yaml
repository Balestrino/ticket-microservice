apiVersion: v1
items:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2020-01-13T14:50:11Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: cassandra
      name: cassandra-data-cassandra-0
      namespace: default
      resourceVersion: "59562447"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/cassandra-data-cassandra-0
      uid: ffc81929-3613-11ea-96eb-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-ffc81929-3613-11ea-96eb-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 20Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2020-01-13T14:50:16Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: cassandra
      name: cassandra-data-cassandra-1
      namespace: default
      resourceVersion: "59562488"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/cassandra-data-cassandra-1
      uid: 02c23282-3614-11ea-96eb-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-02c23282-3614-11ea-96eb-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 20Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2020-01-13T14:50:21Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: cassandra
      name: cassandra-data-cassandra-2
      namespace: default
      resourceVersion: "59562528"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/cassandra-data-cassandra-2
      uid: 05d251fc-3614-11ea-96eb-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-05d251fc-3614-11ea-96eb-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 20Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2020-02-05T10:17:49Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        service: elasticsearch
      name: data-elasticsearch-0
      namespace: default
      resourceVersion: "64027300"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/data-elasticsearch-0
      uid: c2f91498-4800-11ea-96eb-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-c2f91498-4800-11ea-96eb-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 50Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2020-02-05T10:18:46Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        service: elasticsearch
      name: data-elasticsearch-1
      namespace: default
      resourceVersion: "64027480"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/data-elasticsearch-1
      uid: e4a434c9-4800-11ea-96eb-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-e4a434c9-4800-11ea-96eb-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 50Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2020-02-05T10:19:46Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        service: elasticsearch
      name: data-elasticsearch-2
      namespace: default
      resourceVersion: "64027629"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/data-elasticsearch-2
      uid: 089e3867-4801-11ea-96eb-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-089e3867-4801-11ea-96eb-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 50Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2019-12-17T10:19:12Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: minio
      name: data-minio-0
      namespace: default
      resourceVersion: "54242369"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/data-minio-0
      uid: ab9f0e15-20b6-11ea-922b-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-ab9f0e15-20b6-11ea-922b-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 30Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2019-12-17T10:36:28Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: minio
      name: data-minio-1
      namespace: default
      resourceVersion: "54244889"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/data-minio-1
      uid: 152ad7c7-20b9-11ea-922b-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-152ad7c7-20b9-11ea-922b-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 30Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2019-12-17T10:36:49Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: minio
      name: data-minio-2
      namespace: default
      resourceVersion: "54244969"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/data-minio-2
      uid: 21cdfb6a-20b9-11ea-922b-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-21cdfb6a-20b9-11ea-922b-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 30Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2019-12-17T10:37:04Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: minio
      name: data-minio-3
      namespace: default
      resourceVersion: "54245023"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/data-minio-3
      uid: 2ade3c07-20b9-11ea-922b-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-2ade3c07-20b9-11ea-922b-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 30Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2020-01-20T09:54:32Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: redis
      name: data-redis-0
      namespace: default
      resourceVersion: "60898171"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/data-redis-0
      uid: dbc61d61-3b6a-11ea-96eb-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-dbc61d61-3b6a-11ea-96eb-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 10Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2019-11-21T08:20:39Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: mongo
      name: database-mongo-0
      namespace: default
      resourceVersion: "49142141"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/database-mongo-0
      uid: cd2bc437-0c37-11ea-922b-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-cd2bc437-0c37-11ea-922b-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 30Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2019-11-21T08:20:57Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: mongo
      name: database-mongo-1
      namespace: default
      resourceVersion: "49142205"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/database-mongo-1
      uid: d7d7d7c6-0c37-11ea-922b-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-d7d7d7c6-0c37-11ea-922b-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 30Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2019-11-21T08:21:13Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: mongo
      name: database-mongo-2
      namespace: default
      resourceVersion: "49142269"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/database-mongo-2
      uid: e1add0ee-0c37-11ea-922b-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-e1add0ee-0c37-11ea-922b-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 30Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2020-01-14T08:09:50Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: mash-firstupload-protel
      name: storage-mash-firstupload-protel-0
      namespace: default
      resourceVersion: "59703924"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/storage-mash-firstupload-protel-0
      uid: 3cb79ca5-36a5-11ea-96eb-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-3cb79ca5-36a5-11ea-96eb-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 10Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2020-01-14T08:09:53Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: mash-firstupload-protel
      name: storage-mash-firstupload-protel-1
      namespace: default
      resourceVersion: "59703971"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/storage-mash-firstupload-protel-1
      uid: 3ec97b97-36a5-11ea-96eb-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-3ec97b97-36a5-11ea-96eb-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 10Gi
      phase: Bound
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        pv.kubernetes.io/bind-completed: "yes"
        pv.kubernetes.io/bound-by-controller: "yes"
        volume.beta.kubernetes.io/storage-provisioner: nfs.raid5
      creationTimestamp: "2020-01-14T08:10:06Z"
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: mash-firstupload-protel
      name: storage-mash-firstupload-protel-2
      namespace: default
      resourceVersion: "59704015"
      selfLink: /api/v1/namespaces/default/persistentvolumeclaims/storage-mash-firstupload-protel-2
      uid: 464dd3d0-36a5-11ea-96eb-00155d01e331
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: nfs.raid5
      volumeMode: Filesystem
      volumeName: pvc-464dd3d0-36a5-11ea-96eb-00155d01e331
    status:
      accessModes:
        - ReadWriteOnce
      capacity:
        storage: 10Gi
      phase: Bound
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
